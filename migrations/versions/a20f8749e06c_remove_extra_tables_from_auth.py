"""Remove extra tables from auth

Revision ID: a20f8749e06c
Revises: 80492bb69a4d
Create Date: 2025-09-16 02:45:56.703372

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a20f8749e06c'
down_revision: Union[str, Sequence[str], None] = '80492bb69a4d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_password_reset_cleanup'), table_name='password_reset_token')
    op.drop_index(op.f('idx_password_reset_user_created'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_created_at'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_exp'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_used'), table_name='password_reset_token')
    op.drop_index(op.f('ix_password_reset_token_user_id'), table_name='password_reset_token')
    op.drop_table('password_reset_token')
    op.drop_index(op.f('ix_otp_created_at'), table_name='otp')
    op.drop_index(op.f('ix_otp_exp'), table_name='otp')
    op.drop_index(op.f('ix_otp_usage'), table_name='otp')
    op.drop_index(op.f('ix_otp_used'), table_name='otp')
    op.drop_index(op.f('ix_otp_user_id'), table_name='otp')
    op.drop_index(op.f('ix_used_exp'), table_name='otp')
    op.drop_index(op.f('ix_user_usage_created'), table_name='otp')
    op.drop_table('otp')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('otp',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('otp', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('exp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('used', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('usage', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('otp_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('otp_pkey'))
    )
    op.create_index(op.f('ix_user_usage_created'), 'otp', ['user_id', 'usage', 'created_at'], unique=False)
    op.create_index(op.f('ix_used_exp'), 'otp', ['used', 'exp'], unique=False)
    op.create_index(op.f('ix_otp_user_id'), 'otp', ['user_id'], unique=False)
    op.create_index(op.f('ix_otp_used'), 'otp', ['used'], unique=False)
    op.create_index(op.f('ix_otp_usage'), 'otp', ['usage'], unique=False)
    op.create_index(op.f('ix_otp_exp'), 'otp', ['exp'], unique=False)
    op.create_index(op.f('ix_otp_created_at'), 'otp', ['created_at'], unique=False)
    op.create_table('password_reset_token',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('exp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('used', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('password_reset_token_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('password_reset_token_pkey'))
    )
    op.create_index(op.f('ix_password_reset_token_user_id'), 'password_reset_token', ['user_id'], unique=False)
    op.create_index(op.f('ix_password_reset_token_used'), 'password_reset_token', ['used'], unique=False)
    op.create_index(op.f('ix_password_reset_token_exp'), 'password_reset_token', ['exp'], unique=False)
    op.create_index(op.f('ix_password_reset_token_created_at'), 'password_reset_token', ['created_at'], unique=False)
    op.create_index(op.f('idx_password_reset_user_created'), 'password_reset_token', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('idx_password_reset_cleanup'), 'password_reset_token', ['exp', 'used'], unique=False)
    # ### end Alembic commands ###
